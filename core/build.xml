<?xml version="1.0" encoding="UTF-8"?>
<project name="jelly" default="compile"
         basedir=".">

  <property file="build.properties"/>

  <property name="jelly.basename" value="jelly"/>
  <property name="jelly.version.major" value="0"/>
  <property name="jelly.version.minor" value="1"/>
  <property name="jelly.version"
            value="${jelly.version.major}.${jelly.version.minor}"/>
  <property name="jelly.title" value="${jelly.basename} ${jelly.version}"/>
  <property name="jelly.blurb"
            value="${jelly.title} - Copyright 2010 Oblong Industries"/>

  <property name="src.dir" location="src"/>
  <property name="lib.dir" location="../lib"/>

  <property name="build.dir" location="build"/>
  <property name="build.classes.dir" location="${build.dir}/classes"/>

  <property name="dist.dir" location="dist"/>
  <property name="dist.jar"
            location="${dist.dir}/${jelly.basename}-${jelly.version}.jar"/>

  <property name="build.javadoc.dir" location="${build.dir}/javadoc"/>

  <property name="doxygen.bin" value="doxygen"/>
  <property name="doxygen.cfg" location="etc/doxygen.cfg"/>

  <property name="compile.debug" value="true"/>
  <property name="compile.encoding" value=""/>
  <property name="compile.deprecation" value="true"/>
  <property name="compile.optimize" value="true"/>
  <property name="compile.source" value="1.6"/>
  <property name="compile.target" value="1.6"/>

  <property name="test.server" value=""/>
  <property name="test.halt" value="yes"/>
  <property name="test.src.dir" location="test"/>
  <property name="test.build.dir" location="${build.dir}/test"/>
  <property name="test.classes.dir" location="${test.build.dir}/classes"/>
  <property name="test.data.dir" location="${test.build.dir}/data"/>
  <property name="test.reports.dir" location="${test.build.dir}/reports"/>
  <property name="test.reports.format" value="frames"/>

  <tstamp>
    <format property="timestamp.isoformat"
            pattern="yyyy-mm-dd'T'HH:mm:ss" locale="en"/>
  </tstamp>

  <fileset id="test.fileset"
           dir="${test.classes.dir}" includes="**/*Test.class"/>

  <path id="compile.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="test.compile.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="${dist.jar}"/>
  </path>

  <path id="test.run.classpath">
    <path refid="test.compile.classpath"/>
    <path path="${test.classes.dir}"/>
  </path>

  <target name="properties" description="Show build properties">
    <echoproperties/>
  </target>

  <target name="init">
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.javadoc.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>

  <target name="compile" depends="init" description="Compile the source">
    <depend srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            cache="${build.dir}/dependencies"
            closure="true">
    </depend>
    <javac srcdir="${src.dir}"
           classpathref="compile.classpath"
           destdir="${build.classes.dir}"
           debug="${compile.debug}"
           deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}"
           includeAntRuntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="build" depends="compile"
          description="Generate the distribution">
    <property name="manifest.mf" location="${build.dir}/manifest.mf" />
    <manifest file="${manifest.mf}" >
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Sealed" value="false"/>
      <attribute name="Built-On" value="${timestamp.isoformat}"/>
    </manifest>
    <jar jarfile="${dist.jar}"
         duplicate="fail"
         basedir="${build.classes.dir}"
         manifest="${manifest.mf}"/>
  </target>

  <target name="-test-init">
    <mkdir dir="${test.classes.dir}"/>
    <delete dir="${test.data.dir}"/>
    <delete dir="${test.reports.dir}"/>
    <mkdir dir="${test.data.dir}"/>
    <mkdir dir="${test.reports.dir}"/>
  </target>

  <target name="compile-tests" depends="build,-test-init"
          description="Compile the test classes">
    <depend srcdir="${test.src.dir}"
            destdir="${test.classes.dir}"
            cache="${build.dir}/test-dependencies"
            closure="true">
      <classpath refid="test.compile.classpath"/>
    </depend>
    <javac sourcepath="" srcdir="${test.src.dir}"
           classpathref="test.compile.classpath"
           destdir="${test.classes.dir}"
           debug="${compile.debug}"
           deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}"
           includeAntRuntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="test" depends="compile-tests" description="Run unit tests">
    <junit fork="yes" forkMode="once"
           haltonerror="${test.halt}" haltonfailure="${test.halt}"
           printsummary="off" showoutput="no" logfailedtests="no">
      <assertions><enable/></assertions>
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx256m"/>
      <jvmarg value="-server"/>
      <jvmarg value="-Dcom.oblong.jelly.externalServer=${test.server}"/>
      <classpath refid="test.run.classpath"/>
      <formatter type="plain" usefile="false"/>
      <formatter type="plain" usefile="true"/>
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset refid="test.fileset"/>
      </batchtest>
    </junit>
  </target>

  <target name="test-reporting"
          depends="compile-tests"
          description="Run unit tests and generate HTML report">
    <junit fork="yes" forkMode="once" printsummary="off"
           errorProperty="test.failed" failureProperty="test.failed">
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx256m"/>
      <jvmarg value="-server"/>
      <jvmarg value="-Dcom.oblong.jelly.externalServer=${test.server}"/>
      <classpath refid="test.run.classpath"/>
      <formatter type="plain" usefile="false"/>
      <formatter type="xml" usefile="true"/>
      <batchtest todir="${test.data.dir}">
        <fileset refid="test.fileset"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="${test.reports.format}" todir="${test.reports.dir}"/>
    </junitreport>

    <fail if="test.failed">
      Tests failed. Check ${test.reports.dir}.
    </fail>
  </target>

  <target name="clean" description="Clean up" >
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="rebuild" depends="clean, build" description="Rebuild">
  </target>

  <target name="javadoc" depends="init" description="Create javadoc">
    <javadoc destdir="${build.javadoc.dir}"
             source="${compile.source}"
             author="no"
             access="public"
             bottom="${jelly.blurb}"
             header=""
             footer=""
             windowtitle="${jelly.title}"
             doctitle="${jelly.title}">
      <classpath refid="compile.classpath"/>
      <packageset dir="${src.dir}" defaultexcludes="yes">
        <include name="com/oblong/jelly"/>
      </packageset>
    </javadoc>
  </target>

  <target name="doxygen" depends="init"
          description="Create documentation using Doxygen.">
    <exec executable="${doxygen.bin}">
      <arg value="${doxygen.cfg}"/>
    </exec>
  </target>

</project>

